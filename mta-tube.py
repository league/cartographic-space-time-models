#!/usr/bin/env python3
# one-tube.py -- Create blender model from one station's data points
from math import floor, pi, sin, cos
import os

# These have been synchronized
av20N = [21,573,927,393,496,89,12,404,864,375,188,65,28,1412,729,389,253,58,26,1573,848,462,257,61,27,1560,900,471,278,53,32,1447,770,435,296,60,27,1333,740,482,350,72,13,559,628,331,246,78,13,374,705,315,190,75,21,858,896,394,274,81,11,358,548,396,467,88,21,1429,723,403,270,57,33,1466,751,448,273,64,23,1377,664,459,308,64,14,584,732,390,240,76,13,396,689,379,215,71,25,1576,718,417,254,55,28,1616,752,405,265,55,28,1545,795,433,261,55,29,1608,696,427,255,53,25,1410,704,469,262,62,13,594,683,401,255,75,21,409,723,355,214,49,28,1520,799,396,269,59,21,1566,758,410,279,65,29,1567,772,341,263,70,30,1567,746,405,303,49,29,1430,694,459,328,88,20,607,687,419,232,59,15,392,690,348,219,58,32,1502,694,399,265,68,34,1553,726,446,298,55,26,1565,787,430,297,59,29,1544,755,404,306,67,30,1430,712,467,258,61,0,0,0,0,0,0,0,0,0,0,0,0,0,1011,600,279,179,40,24,1337,598,331,197,38,22,1406,673,310,200,32,22,1414,661,359,217,45,26,1253,650,353,210,65,17,550,586,274,188,30,30,373,572,301,145,35,32,1360,658,304,172,36,28,1433,697,353,208,42,27,1435,711,370,207,52,30,1382,700,347,229,51,28,1279,691,396,210,49,21,538,611,294,205,48,12,361,610,270,111,29,31,1358,695,302,187,33,24,1398,694,327,195,33,29,1372,687,324,232,42,24,1346,744,334,207,37,19,1206,669,362,194,39,17,542,591,308,171,47,25,349,499,268,150,39,30,1278,663,317,194,29,29,1286,689,313,202,33,31,1282,500,500,210,42,26,1302,688,346,229,33,23,1204,688,350,209,54,14,544,596,297,173,47,19,361,527,274,134,31,30,1317,698,299,206,39,30,1298,701,333,207,34,23,1336,737,378,195,35,22,1339,710,378,198,40,25,1213,746,365,208,47,15,504,566,321,164,35,7,323,477,343,135,32,13,402,588,312,162,35,27,1408,711,383,205,36,26,1364,1061,409,212,29,28,1558,703,604,251,32,19,1517,705,584,228,45,18,577,623,347,184,46,10,379,603,262,145,29,26,1611,704,549,239,32,26,1631,688,655,241,21,21,1605,684,658,255,36,21,1648,686,553,270,28,22,1487,707,559,236,45,18,578,689,339,259,45,9,390,604,372,147,33,23,1626,697,590,237,36,30,1622,719,530,228,32,31,1569,706,580,201,48,19,1290,685,358,206,25,24,1205,547,397,210,42,8,579,671,370,206,53,16,375,583,325,164,28,24,1623,701,530,256,35,30,1628,659,551,246,29,28,1634,724,498,273,45,28,1648,698,494,295,35,25,1285,816,536,275,45,27,544,635,310,211,42,13,365,595,315,145,38,31,1598,695,435,257,34,26,1647,664,484,277,39,30,1614,707,460,276,35,29,1431,812,433,220,41,26,1461,702,461,211,45,18,581,647,373,203,58,14,339,559,323,127,31,19,982,590,278,193,34,28,1620,679,496,285,42,28,1586,728,460,251,53,22,1597,639,481,281,32,32,1493,684,480,242,40,19,582,634,360,176,46,9,354,617,377,197,43,32,1630,716,410,250,26,29,1652,701,469,287,32,31,1648,725,403,283,30,33,1680,720,490,261,42,27,1584,675,460,256,37,13,617,670,327,211,43,15,379,643,336,157,34,27,1615,726,401,270,32,26,1624,666,391,234,30,24,1649,700,427,274,33,28,1660,723,415,353,42,30,1540,733,531,211,44,14,588,639,316,227,65,15,353,440,243,98,20,36,1619,680,384,253,37,29,1572,727,435,224,32,25,1629,759,401,271,31,25,1640,724,420,270,41,21,1507,692,473,265,49,14,589,627,357,191,47,5,234,707,303,148,52,7,1112,1141,422,325,67,12,967,1138,412,241,37,11,1087,1181,419,319,69,13,1131,1147,417,314,60,15,934,1086,434,264,42,11,331,744,375,234,66,10,213,643,398,175,63,11,1071,1134,407,312,61,8,1108,1166,438,314,42,8,1105,1155,465,299,60,7,1062,1143,471,288,56,10,1039,1125,470,312,62,0,0,0,0,0,0,0,0,0,0,0,0,0,1068,1205,412,328,62,10,1054,1171,444,310,55,10,1031,1110,527,312,62,8,218,544,321,222,96,17,506,896,371,245,51,1,0,0,0,0,0,0,0,0,0,0,25,6,1102,1151,437,300,62,7,1064,1171,408,347,65,9,1053,1237,479,304,62,13,1073,1184,444,302,64,11,995,1111,427,312,69,7,336,725,411,203,51,5,203,618,314,145,38,5,1072,1215,435,284,63,6,1059,1158,434,332,50,7,1075,1334,443,281,48,11,1070,1191,423,336,68,6,997,1140,486,288,64,7,316,686,322,165,56,3,199,611,374,129,52,11,1065,1198,366,279,66,7,1048,1115,414,289,70,5,1024,1125,399,293,41,5,1021,1181,458,288,51,8,956,1111,443,272,51,11,316,721,435,197,52,4,192,626,381,171,40,6,1005,1156,427,289,57,8,1056,1161,456,334,51,10,1042,1150,436,302,73,10,1007,1127,442,336,59,9,902,1055,494,287,64,13,272,657,356,194,61,4,201,682,361,175,59,8,179,397,252,148,56,9,661,962,425,240,52,9,709,1032,414,232,54,14,716,981,360,250,35,8,640,908,387,244,58,8,228,618,322,188,59,8,182,527,277,166,78,12,181,406,245,132,30,5,892,1063,379,278,41,13,1015,1100,424,282,48,11,599,571,141,109,20,8,883,924,391,244,48,5,284,574,315,152,46,2,191,549,312,124,35,8,1023,1164,401,312,59,16,1070,1206,402,324,72,14,1074,1097,375,317,64,11,1067,1141,444,316,64,11,987,1057,545,278,72,6,316,511,306,224,41,8,184,555,314,160,35,11,612,785,322,229,55,10,1036,1092,416,317,59,10,1030,1060,358,285,60,9,1029,1086,412,305,55,11,1001,1023,457,305,53,7,312,677,398,212,51,8,196,557,364,151,55,10,943,1131,409,302,48,8,958,1106,528,347,53,12,939,1135,438,299,58,9,941,1163,414,263,53,9,880,1060,467,283,71,8,323,737,407,270,71,15,195,562,325,166,45,11,961,1418,451,288,52,7,1067,1175,557,291,63,15,1034,1182,483,342,67,9,1060,1177,506,323,56,11,957,1120,581,297,50,9,346,711,372,199,67,8,194,607,328,147,40,11,1080,1173,470,335,52,11,1067,1216,491,340,58,10,1041,1150,437,295,61,10,1068,1247,464,309,73,11,1033,1158,573,309,66,6,337,736,413,232,74,8,198,589,333,153,54,16,1062,1105,526,325,67,14,1094,1172,580,309,69,16,1084,1137,514,307,86,13,991,1088,465,302,103,15,642,957,446,206,64,10,280,646,361,179,78,13,203,599,427,167,92,8,512,797,398,234,63,11,868,1169,443,264,48,14,892,1141,426,287,59,17,911,1133,418,281,55,12,848,1065,434,276,64,11,338,756,410,222,56,12,208,559,368,178,54,12,1101,1194,476,350,48,16,1109,1196,506,318,70,17,1080,1187,521,338,69,13,1103,1172,501,320,55,14,970,1035,481,243,43,5,342,774,426,260,49,7,205,647,378,165,63,13,1153,1280,517,357,76,11,1294,1367,573,375,80,19,1095,1048,398,184,31,11,1209,1304,522,339,74,16,1187,1286,611,356,76,7,428,863,460,247,80,14,386,617,381,168,37,33,1821,797,470,273,35,43,1764,693,483,313,40,38,1859,821,507,291,45,43,1806,807,480,280,41,39,1734,834,674,288,47,12,600,817,419,198,54,16,399,697,367,143,55,39,1967,857,514,290,33,38,2034,859,566,317,41,33,1191,443,231,130,32,34,1889,875,535,410,45,34,1932,935,595,283,69,17,709,793,459,224,57,22,459,706,366,173,40,39,2006,921,417,321,41,33,2052,950,532,293,43,31,2062,911,569,332,37,30,1984,913,439,439,52,28,1395,887,481,271,57,20,609,872,436,233,64,18,412,695,378,171,43,35,1549,866,426,222,31,32,1714,911,404,237,40,37,1645,998,494,235,41,40,1670,951,458,267,43,33,1537,910,445,250,75,23,635,789,439,234,59,22,448,767,424,157,32,37,2080,906,541,275,38,33,2070,916,549,283,45,30,2090,892,523,254,42,38,2077,912,547,280,44,38,1983,964,623,302,68,21,725,969,451,201,89,16,440,696,364,138,39,37,1932,816,623,273,40,37,2107,986,555,299,44,37,2066,965,541,276,36,36,2049,918,558,297,42,36,2000,931,637,283,68,24,718,876,476,201,63,23,442,785,407,176,49,46,2065,949,529,255,53,46,2107,969,571,248,58,36,2050,870,537,289,36,39,2080,1008,520,288,48,39,1951,891,590,259,96,26,754,878,450,214,79,20,471,789,459,182,41,45,2089,985,520,236,47,39,2164,899,526,293,47,32,2142,938,571,290,51,44,2134,981,566,302,57,34,1991,945,624,301,85,27,776,930,474,215,64,30,459,819,405,187,50,41,2107,978,567,296,36,41,2158,1026,640,319,46,44,2112,978,594,324,34,40,2114,963,622,306,59,40,1983,965,636,311,52,35,743,878,450,239,71,20,458,767,363,181,40,40,2121,988,548,267,56,44,2138,975,570,249,43,39,2101,916,600,275,50,42,2002,893,557,270,47,43,1906,953,639,280,85,32,688,35,35,37,48,15,458,804,406,157,61,37,1988,907,581,243,59,41,2074,938,523,259,57,39,2037,981,585,313,53,41,2000,971,567,337,57,42,1851,915,618,298,74,29,672,835,345,242,67,18,384,588,374,157,45,20,599,780,432,204,55,44,2006,967,543,271,53,4,2042,961,553,269,48,4,2051,865,557,293,55,1,1832,956,533,261,18,0,0,0,0,0,0,0,0,0,0,0,0,3,1998,923,522,280,57,1,1962,940,553,258,59,1,2092,949,510,306,38,0,1786,1023,496,251,35,1,1907,927,648,317,17,0,0,0,0,0,0,0,0,0,0,0,0,0,1954,973,545,269,46,0,1982,1006,654,278,41,1,1968,986,580,230,54,0,1908,1003,531,292,49,0,1635,957,447,307,59,16,655,890,433,222,67,19,492,836,411,176,47,47,1892,939,528,244,50,38,1924,1037,463,269,73,41,1929,1053,528,252,56,49,1899,953,540,266,60,38,1760,946,575,270]
broadwayG = [85,290,632,798,682,299,113,246,610,696,491,287,79,1178,797,853,946,264,61,1285,837,1013,958,310,60,1330,997,956,1053,344,61,1171,888,884,1011,298,60,1119,813,849,953,298,79,309,566,599,528,227,48,189,525,610,410,161,51,748,719,821,815,248,60,221,584,750,944,531,80,922,806,762,884,242,81,1077,813,783,919,268,76,1027,766,906,910,296,56,308,544,589,532,218,64,170,486,593,401,183,60,1151,833,796,840,174,64,1139,790,833,795,231,62,1169,852,771,883,292,63,1160,854,811,935,253,63,1074,808,941,792,300,70,343,571,693,554,228,81,189,518,583,455,178,51,1119,850,714,876,227,58,1178,880,738,846,233,56,1208,867,825,887,258,62,1154,887,863,988,267,64,1064,779,987,961,280,97,401,648,704,679,299,82,224,569,687,504,180,65,1092,778,702,790,226,54,1135,850,817,886,236,62,1195,869,838,948,295,58,1136,906,801,915,319,79,1057,828,952,915,324,77,367,637,710,599,318,109,222,589,700,568,190,63,1122,858,716,796,210,60,1203,860,682,789,258,63,1189,871,844,973,259,72,1152,910,901,981,280,70,960,838,1040,955,295,79,325,603,766,623,290,119,216,662,700,594,174,61,1074,775,704,785,219,52,1159,843,793,895,234,58,1146,882,770,898,285,56,1107,800,824,965,293,64,1038,830,954,920,323,72,356,646,699,606,264,67,180,515,610,498,149,53,1077,804,762,826,227,51,1081,767,698,825,318,56,1117,820,797,899,303,61,1088,831,895,989,280,63,945,788,888,817,290,76,368,668,834,718,315,97,251,563,725,519,197,70,1040,779,714,904,213,61,1088,785,734,894,217,52,1070,791,747,948,281,70,1075,850,840,969,291,85,1039,813,891,973,280,106,370,579,660,580,238,141,209,495,590,447,165,60,1074,524,1073,886,219,56,1096,809,747,876,203,66,1101,776,833,937,290,76,1111,783,873,1048,330,72,1017,827,1030,960,273,81,335,571,603,486,193,70,184,450,652,522,233,74,281,586,690,640,173,61,1181,864,877,967,257,73,1216,861,892,955,255,58,1443,828,1178,1101,296,72,1369,861,1334,1052,289,0,0,0,0,0,0,1,0,0,0,0,0,1,1447,849,1065,1105,247,65,1403,866,1138,1033,286,73,1449,852,1165,1073,272,76,1421,891,1122,1117,277,70,1373,874,1274,1077,338,84,368,704,765,608,334,92,245,675,309,562,170,68,1406,781,1140,1099,262,67,1349,901,1108,1080,327,63,1345,796,1164,1080,288,74,1162,980,664,870,282,68,1029,909,805,821,332,118,380,816,817,686,301,123,239,801,997,607,204,62,1402,878,1137,1017,223,59,1442,864,1175,1156,284,64,1398,928,1134,1095,276,73,1418,872,1167,1275,320,74,1291,888,1279,1000,314,79,362,652,635,575,206,68,215,586,714,528,172,71,1382,832,1156,1129,246,70,1463,934,1177,1133,334,69,1411,911,1191,1163,285,69,1440,911,985,844,270,67,1307,916,1021,843,215,0,0,0,0,0,0,1,0,0,0,0,0,4,749,700,713,703,197,74,1388,921,1175,878,256,66,1390,850,1097,958,255,78,1364,930,926,817,259,69,1359,920,1104,900,360,93,429,744,823,731,354,112,233,639,726,582,202,73,1412,934,1093,1048,213,64,1463,927,1069,1068,246,61,1434,950,1095,1221,303,76,1450,895,1213,1155,292,72,1373,958,1244,1106,355,97,454,718,738,667,299,107,262,670,853,546,185,75,1373,918,1172,1034,236,71,1409,928,1011,1016,232,72,1416,921,1104,1177,301,74,1468,1146,1200,1190,296,81,1371,982,1326,1090,373,98,436,696,809,748,402,189,249,512,568,396,142,63,1403,847,1073,1064,296,70,1460,925,1197,1045,280,83,1402,934,1173,1144,311,76,1458,970,1167,1157,315,71,1380,945,1328,1021,314,96,436,748,840,675,309,87,188,790,855,690,249,55,873,1365,902,1311,335,51,802,1252,810,1072,297,51,878,1383,966,1250,401,65,856,1432,1010,1382,494,92,742,1262,1257,1069,335,86,301,864,1002,761,365,154,189,716,968,753,293,60,822,1327,951,1293,354,61,879,1337,928,1353,361,56,943,1453,974,1318,463,69,855,1391,962,1370,445,87,816,1299,1264,1199,427,131,327,934,958,825,354,124,196,729,885,792,268,66,824,1340,945,1336,378,70,839,1329,969,1320,363,88,764,1179,1119,1247,366,67,179,350,640,642,233,60,339,669,912,759,262,79,218,551,559,494,260,88,149,480,574,547,187,62,852,1245,908,1327,347,79,868,1348,935,1258,381,82,910,1422,904,1299,371,79,856,1414,966,1344,397,91,822,1303,1244,1196,342,100,276,687,839,638,310,116,143,485,698,570,180,72,837,1311,986,1382,370,93,892,1374,956,1264,363,68,887,1366,1046,1285,411,75,904,1434,1037,1309,415,91,824,1310,1214,1088,388,152,248,652,688,662,325,135,157,595,839,641,280,67,869,1443,914,1304,338,70,875,1364,964,1297,369,67,823,1292,905,1233,366,56,789,1362,988,1337,426,72,801,1298,1256,1149,251,0,0,0,0,0,0,0,0,0,0,0,0,0,779,1226,906,1305,377,55,814,1292,999,1194,360,96,809,1458,1030,1292,363,70,782,1156,1007,1308,400,66,728,1023,1266,1013,292,96,193,521,496,461,234,69,146,447,555,463,204,41,85,238,358,352,145,51,461,682,653,934,276,49,510,815,714,1023,277,57,492,843,742,1015,323,58,476,812,1039,955,308,79,186,460,511,415,221,90,135,414,505,536,327,176,117,247,462,456,181,47,726,1042,897,1146,375,67,796,1236,987,1243,367,63,505,674,571,654,212,44,676,1231,1102,919,331,73,210,542,662,724,257,84,139,480,662,660,262,65,818,1390,913,1282,380,70,852,1385,947,1269,394,72,884,1406,923,1287,375,65,835,1241,1020,1330,409,59,800,1258,1162,1054,371,128,251,677,727,664,330,121,124,536,643,679,234,69,436,797,786,991,288,50,837,1325,930,1237,325,60,847,1308,925,1205,386,58,966,1352,947,1405,417,53,806,1242,1210,1148,367,104,230,596,762,624,361,126,143,515,712,687,274,76,745,1251,987,1308,302,69,771,1259,912,1195,339,67,772,1340,1011,1174,395,51,761,1218,935,1302,410,60,737,1259,1178,1050,402,91,236,647,765,696,370,137,146,465,673,669,251,61,789,1268,909,1155,330,66,902,1308,911,1112,383,62,887,1314,893,1389,351,44,858,1339,985,1287,396,57,803,1424,1075,1080,323,110,253,624,695,633,330,96,129,545,598,638,326,64,830,1299,859,1236,318,66,840,1383,890,1265,342,53,805,1385,904,1147,362,53,845,1335,949,1309,406,48,792,1324,1164,1167,424,132,275,859,893,795,333,96,182,633,827,690,244,73,847,1205,895,1331,342,64,699,1469,910,1243,415,57,855,1390,975,1284,414,74,807,1354,1020,1351,392,78,612,1107,995,1051,367,126,212,551,637,564,276,74,146,441,558,598,265,64,384,791,861,1195,335,59,691,1232,738,1167,389,60,711,1267,768,1162,380,77,707,1219,727,1167,434,66,667,1147,938,1060,367,101,231,653,670,632,342,110,149,446,567,644,259,54,857,1274,904,1321,237,1,846,1325,974,1313,242,0,827,1320,952,1303,233,0,816,1290,982,1029,216,0,710,1167,962,961,244,82,237,676,763,598,302,136,158,480,711,686,242,66,847,1315,916,1393,376,65,883,1467,980,1421,405,59,724,1142,892,963,219,60,865,1329,939,1376,438,76,852,1306,1144,1317,416,116,290,740,851,731,362,165,219,629,838,751,238,76,1304,901,1171,1110,246,73,1331,847,1104,1164,267,74,1441,957,1203,1251,276,71,1428,971,1148,1256,256,63,1369,967,1355,1126,294,83,493,902,930,760,281,107,291,854,975,777,233,71,1382,925,1179,1233,117,3,1440,970,1143,1222,159,45,832,530,666,768,174,54,1441,930,1151,1281,113,0,1356,960,1322,1203,309,85,449,712,800,725,251,93,257,681,839,775,235,70,1394,916,1165,1236,111,2,1429,1000,1166,1244,73,4,1389,1028,1135,1334,109,5,1405,1021,1179,1285,246,60,880,908,1071,1044,279,85,372,737,794,785,375,84,220,617,680,457,318,61,1061,796,866,738,212,65,1141,937,873,732,198,68,1159,906,888,793,220,61,1151,924,1002,900,233,71,1052,883,780,703,273,94,382,689,836,649,273,94,241,654,778,597,172,67,1419,867,1182,1130,224,54,1448,941,1115,1066,246,60,1421,958,1123,1050,286,68,1486,947,1240,1134,265,64,1332,940,1329,1008,338,76,413,783,816,599,260,93,214,514,717,453,126,57,1315,765,1055,1012,211,62,1439,975,1114,998,62,4,1414,932,1153,1031,77,5,1399,944,1178,1011,99,0,1321,911,1371,1044,255,91,490,853,856,641,287,94,249,725,896,580,192,67,1390,911,1138,999,61,12,1443,970,1157,1015,91,3,1372,921,1114,995,83,4,1441,962,1206,1099,122,1,1319,914,1307,998,284,75,470,864,917,690,278,93,295,697,908,621,186,70,1446,943,1163,947,86,4,1462,994,1134,1046,77,3,1407,956,1147,1001,98,5,1373,947,1147,1104,97,0,1334,924,1283,1042,270,109,470,830,926,728,357,137,270,672,777,607,190,74,1402,958,1112,1005,85,8,1415,915,1087,994,84,4,1429,942,1109,1039,82,8,1396,900,1092,1173,91,0,1310,950,1289,1001,323,111,433,786,813,675,275,80,243,688,738,571,189,75,1343,901,1165,1056,231,70,1432,904,1085,938,214,66,1411,894,1125,989,273,70,1443,945,1110,1173,332,77,1333,945,1352,1076,388,110,473,712,815,695,337,111,308,772,860,621,253,75,1350,935,992,715,238,64,1173,1174,1128,1012,249,69,1424,972,1140,1116,271,75,1373,966,1146,1092,329,89,1266,893,1420,988,347,106,435,795,851,645,304,107,234,544,691,565,280,86,340,641,896,812,222,71,1476,893,1076,1005,245,78,1414,920,1141,1083,289,78,1435,854,1106,1080,285,86,1350,878,1294,1055,362,144,504,837,948,688,367,117,268,748,928,639,248,65,1378,868,1132,1051,93,10,1328,845,1219,1079,89,9,1414,938,1100,1082,90,1,1236,899,972,1091,103,5,1325,886,1287,1062,282,98,447,812,812,709,366,133,250,639,772,588,186,52,1309,887,1004,1054,110,5,1334,941,1105,1010,91,11,1300,882,1121,997,94,2,1255,885,1178,1095,103,1,1105,867,1171,1011,304,98,469,872,847,633,330,90,241,660,749,540,231,73,1271,912,1020,980,257,72,1337,888,1031,1350,323,72,1338,948,1093,1101,265,68,1282,958,1039,1117,310,79,1200,875,1230,1053]
beach67A = [44,238,379,535,685,346,59,199,392,768,1266,271,52,801,596,539,544,215,50,852,695,473,332,189,49,882,645,484,554,214,46,820,629,597,447,172,52,753,587,674,694,245,63,245,393,517,329,214,56,170,343,683,2065,544,89,587,519,615,1000,355,61,221,303,651,1551,571,185,815,639,532,432,223,66,845,631,471,342,163,55,812,564,420,369,202,56,262,397,591,669,352,124,182,351,630,1475,438,63,901,645,522,481,190,44,919,659,453,368,181,62,877,701,520,376,191,52,888,670,520,464,173,54,788,585,468,356,159,51,243,446,608,809,375,50,165,334,687,1693,399,50,865,613,490,484,233,50,885,659,461,535,260,57,866,660,523,578,241,67,858,622,525,691,283,64,774,575,629,777,423,70,237,418,665,1384,299,48,172,330,449,526,226,38,833,601,467,324,155,45,863,689,485,329,170,49,894,671,505,472,184,48,870,684,501,372,170,61,805,626,478,427,228,69,249,416,445,374,224,51,182,367,696,1548,330,56,782,649,527,640,226,53,849,684,552,640,309,58,838,686,502,372,152,50,881,691,523,460,184,49,814,609,412,412,413,57,249,371,459,473,340,73,186,369,723,1144,258,54,596,772,438,243,118,52,850,688,491,396,181,59,798,661,542,631,256,53,816,702,508,557,208,53,782,623,515,523,188,51,251,399,444,385,204,51,189,364,750,1682,451,53,820,601,516,412,178,53,842,640,408,290,163,61,787,704,619,664,263,56,791,662,552,497,206,55,706,569,425,342,171,45,245,423,612,1046,359,64,179,338,682,1424,369,54,751,621,530,533,231,50,795,614,503,504,217,74,766,626,495,431,206,62,763,612,553,507,220,73,744,598,552,519,213,75,247,430,551,823,290,101,180,320,512,898,173,46,805,618,467,335,170,41,832,660,422,277,108,43,810,689,500,414,188,49,809,705,570,404,180,59,752,652,529,444,190,52,220,411,434,302,165,44,150,266,372,250,186,56,214,335,791,1711,253,57,853,647,504,468,160,56,848,639,432,285,141,46,997,655,435,358,143,54,964,686,478,397,159,54,269,465,538,461,220,46,159,374,496,468,188,57,1056,667,460,333,149,48,1096,671,463,368,143,48,1050,711,498,303,156,50,1068,635,512,345,152,55,1020,667,505,391,176,45,257,469,505,512,208,56,194,390,513,523,171,59,1008,686,448,312,140,47,1055,614,381,291,119,50,1016,655,456,317,169,44,771,607,475,347,131,56,732,660,553,442,183,51,270,444,580,756,244,41,207,385,673,1454,260,48,1055,650,503,504,145,57,1054,661,457,346,145,54,1023,666,494,347,153,36,1072,694,475,395,144,46,1002,686,517,391,167,49,262,415,434,314,168,35,178,326,418,334,142,44,1031,627,431,318,148,44,1054,673,480,316,136,45,421,1253,506,360,156,47,1048,650,537,388,149,45,964,665,511,410,158,57,261,421,565,433,158,35,151,309,345,261,142,42,546,467,378,277,135,55,1024,706,528,417,144,57,1011,705,454,312,147,40,999,652,514,319,135,49,941,662,475,393,168,52,234,435,531,301,169,43,164,321,419,318,152,51,1033,676,472,306,131,46,1077,663,443,308,146,45,1093,642,477,332,140,42,1063,658,474,307,136,50,981,664,491,350,175,36,263,426,460,401,144,43,162,357,368,343,155,56,1073,657,437,310,122,52,1035,617,414,266,133,40,1046,697,454,322,121,49,1020,705,495,318,137,49,957,644,494,411,202,41,237,418,481,359,184,57,164,320,307,160,107,39,965,629,426,292,137,42,1002,643,444,334,127,32,986,709,442,338,124,41,1002,649,453,324,133,42,954,681,491,400,167,40,243,389,390,279,134,25,107,283,264,220,131,32,570,1044,376,378,166,42,521,860,416,328,126,37,536,1052,382,439,165,52,570,1002,401,432,164,38,465,805,383,354,194,37,151,356,352,298,178,38,98,301,318,250,158,26,554,960,392,355,154,44,575,1013,393,397,171,44,535,1042,388,418,170,39,526,990,415,395,163,45,524,1002,406,458,208,50,170,380,393,316,180,57,102,282,332,236,168,34,547,1016,413,370,165,42,531,976,420,381,200,31,457,888,411,443,188,43,128,239,337,354,221,55,239,439,387,362,155,12,0,0,0,0,2,0,0,1,0,1,1,0,469,1021,580,413,150,33,591,1062,572,438,152,41,547,861,0,245,149,40,538,880,5,252,143,40,542,880,3,273,166,0,0,3,0,0,0,0,0,0,0,0,0,0,460,832,0,199,152,44,561,800,1,216,127,30,548,822,0,234,134,40,542,883,1,212,139,44,512,760,1,245,158,10,0,0,0,0,0,0,0,0,0,1,0,0,452,764,0,231,126,33,516,803,0,218,118,33,531,791,0,195,120,42,517,787,0,206,144,34,514,707,0,234,128,3,0,1,0,0,0,0,1,0,0,0,1,0,380,726,0,221,127,37,501,778,0,241,147,32,487,741,0,223,144,38,474,735,0,247,146,34,433,637,1,248,199,38,123,262,322,253,139,62,88,298,317,242,137,41,95,158,216,246,149,35,308,526,371,315,141,40,365,525,0,202,139,29,325,513,1,213,151,38,287,395,4,281,153,43,118,254,341,211,131,38,83,202,274,242,171,66,96,171,239,254,117,30,431,708,332,294,141,29,460,852,331,321,162,42,298,300,88,123,63,13,362,571,301,155,155,157,202,221,196,197,95,32,104,292,112,181,123,29,493,869,325,292,118,47,513,891,310,347,133,27,509,882,396,341,142,35,535,911,374,350,140,38,460,852,370,334,179,34,149,313,341,279,154,58,96,218,303,236,107,30,274,361,322,293,131,35,504,822,342,346,125,39,515,855,349,336,115,49,503,905,368,333,155,38,530,834,360,352,185,49,155,325,379,330,169,52,99,252,267,244,135,43,506,840,392,347,136,42,512,804,347,329,139,33,508,795,347,320,133,52,482,796,403,377,139,40,484,761,414,396,185,38,161,373,369,316,182,48,98,258,274,230,138,40,503,864,403,338,136,35,523,945,339,377,132,36,549,933,381,319,131,33,539,934,376,361,142,32,501,885,397,390,182,36,166,334,319,278,149,44,96,240,263,217,110,46,521,891,362,328,140,32,525,953,355,365,124,31,539,926,330,269,106,34,536,942,370,368,146,31,500,900,360,380,169,52,170,327,373,289,159,48,99,216,234,183,134,30,517,829,358,343,140,39,523,916,361,334,171,40,535,905,374,380,136,43,504,913,396,361,135,30,402,685,430,365,179,36,128,184,165,131,102,24,78,154,166,186,105,36,220,314,283,288,134,36,468,785,406,397,141,28,470,790,430,424,153,42,458,771,403,343,131,39,423,740,430,332,172,76,137,336,343,299,163,44,95,194,245,246,125,43,541,872,401,312,147,46,549,943,339,385,151,33,556,924,391,387,153,48,503,961,376,381,142,38,440,738,329,278,119,42,156,334,380,363,179,52,98,276,313,282,129,32,532,911,353,346,155,41,515,928,391,395,152,37,427,680,258,216,91,32,494,887,383,376,149,38,485,843,398,409,196,74,173,356,364,305,167,39,134,289,307,231,131,50,869,586,410,279,122,43,850,494,367,288,112,48,921,597,388,307,109,41,880,559,422,318,121,51,872,550,424,336,148,40,233,318,380,269,147,34,131,259,292,209,121,48,920,601,400,295,128,47,900,598,415,256,129,36,510,295,220,151,62,34,759,530,421,280,127,42,906,540,434,302,159,54,256,328,407,292,182,34,156,240,338,192,129,39,908,361,3,275,114,41,935,343,13,264,129,39,911,372,15,300,95,35,891,363,10,297,121,37,524,266,11,336,117,28,44,0,1,0,0,0,0,0,0,32,88,38,600,425,355,281,123,35,741,513,386,248,102,34,744,517,366,295,118,40,742,522,436,289,150,50,630,501,440,297,154,39,206,324,389,261,174,43,162,238,306,211,106,49,952,540,437,299,119,37,1020,593,407,320,130,51,1030,632,460,348,116,39,1038,637,435,311,133,48,991,607,487,422,172,43,244,379,605,546,168,35,143,268,260,186,118,43,948,464,373,292,119,45,1058,652,469,318,130,44,1059,636,470,342,150,39,1020,619,425,309,133,48,1058,589,479,395,245,45,281,379,427,293,166,48,183,264,366,306,131,43,1028,647,427,330,139,47,1073,606,468,328,136,31,1030,551,428,299,145,48,1068,642,474,333,155,49,993,576,443,369,177,40,268,442,469,334,193,40,159,286,332,277,136,41,1033,623,444,310,139,51,1056,657,482,403,147,44,1084,641,538,641,172,52,1057,678,666,742,162,42,1002,608,546,463,183,42,305,481,549,470,194,43,176,286,335,252,152,52,1034,660,504,402,145,45,1078,650,507,392,131,47,1093,665,494,417,143,50,1041,637,519,362,122,47,1023,693,555,460,193,64,234,416,391,304,164,36,136,296,329,232,145,54,1005,664,448,354,123,52,1083,602,475,412,125,49,1035,660,426,304,137,50,995,638,491,366,144,53,1018,623,466,386,167,48,158,210,177,137,68,24,77,156,146,92,61,28,961,623,498,366,151,53,948,601,409,288,124,57,929,569,404,389,158,50,966,581,479,429,152,62,830,588,601,707,196,48,224,345,488,700,248,41,125,211,262,200,143,39,190,266,399,318,164,58,917,561,456,490,175,54,944,549,418,339,143,40,930,601,422,293,123,51,829,607,450,390,148,49,240,347,261,401,179,45,164,298,308,232,118,49,865,601,439,309,149,52,888,598,480,345,152,31,943,557,443,370,156,33,817,597,468,332,154,47,873,599,483,480,210,46,248,404,502,632,233,57,147,296,303,217,138,39,855,576,462,340,149,44,844,682,518,387,146,40,844,625,426,326,135,51,854,594,544,564,194,45,743,570,498,413,189,41,247,386,545,990,270,36,149,317,488,979,266,60,818,637,541,922,236,54,858,666,502,510,188,52,829,614,490,420,153,64,793,623,452,503,182,55,750,587,559,420]
clevelandSt = [39,427,491,498,387,173,67,319,452,429,300,129,79,1170,605,571,439,143,82,1331,656,655,406,146,74,1380,702,624,405,136,89,1244,619,529,428,128,72,1180,608,570,478,146,64,464,526,494,324,171,63,333,431,402,328,138,74,958,539,549,373,134,45,400,366,448,415,172,91,1223,578,518,400,117,89,1277,594,508,411,125,70,1188,521,530,430,159,47,486,492,499,402,203,67,320,435,480,305,133,89,1337,629,513,394,115,90,1317,608,545,376,108,75,1348,586,510,408,143,88,1332,594,534,404,110,82,1172,566,501,408,151,48,484,539,456,396,179,47,305,467,407,292,151,79,1306,600,526,404,128,84,1353,615,533,389,135,75,1335,584,481,384,138,79,1348,588,533,405,120,66,1174,581,535,442,175,62,450,547,491,388,132,48,305,444,405,317,121,77,1219,533,466,353,103,79,1325,588,543,395,112,102,1297,599,531,391,139,82,1321,605,523,405,126,88,1197,587,555,421,157,61,451,505,489,357,135,64,334,427,415,311,138,104,1264,575,535,340,125,89,1264,615,567,412,131,76,1270,604,510,380,111,81,1309,593,535,416,120,74,1130,552,538,470,166,53,434,488,494,420,173,56,320,435,400,326,130,84,1225,539,497,327,104,84,1267,566,576,389,128,89,1258,613,529,370,134,89,1265,576,531,442,131,85,1164,580,527,466,186,48,459,464,441,387,123,35,302,449,386,280,128,77,1191,596,490,344,132,86,1241,596,473,341,113,82,1288,528,500,393,113,72,1256,580,461,450,143,74,1122,511,518,399,133,54,469,517,491,366,179,55,285,442,414,301,125,81,1149,540,471,381,119,84,1214,524,473,390,114,78,1178,543,504,377,128,84,1188,582,494,396,124,68,1181,567,567,429,147,50,512,478,502,389,147,77,321,436,405,302,100,68,1228,537,519,343,124,83,1269,551,475,325,106,83,1284,657,518,367,117,84,1268,568,533,373,148,89,1156,632,572,417,169,66,452,494,462,329,118,49,295,344,402,287,98,51,456,419,432,273,107,98,1294,579,574,401,102,86,1297,646,535,361,92,84,1648,579,581,416,119,80,1621,615,646,479,179,56,527,505,455,399,149,62,316,412,435,316,100,79,1718,591,606,427,104,82,1786,617,664,440,108,83,1811,587,599,414,113,88,1826,533,583,437,112,83,1738,554,613,505,168,63,498,542,500,401,146,65,357,439,408,286,91,72,1719,591,579,443,100,78,1737,575,556,336,122,84,1739,522,613,440,122,68,1168,582,574,408,123,70,1104,596,569,567,142,41,509,490,455,355,158,51,331,392,364,307,96,80,1709,590,592,457,138,80,1772,592,644,434,134,72,1769,628,628,432,128,78,1801,617,623,459,110,75,1655,593,595,485,172,52,474,537,499,355,126,45,325,421,421,288,69,72,1698,635,586,372,92,78,1826,627,633,448,106,84,1788,660,666,476,135,79,1667,616,648,414,116,84,1624,644,624,560,181,56,507,516,508,378,157,52,274,356,381,249,82,65,854,460,420,303,76,79,1802,602,585,471,109,81,1767,632,624,441,111,74,1652,570,643,485,112,75,1603,695,591,488,133,58,536,522,478,389,123,53,335,424,438,224,94,74,1763,566,615,407,118,85,1788,626,611,440,126,76,1739,609,627,443,132,87,1742,628,587,449,121,82,1696,633,646,483,140,51,501,525,464,318,126,42,312,356,406,246,69,80,1732,589,596,394,120,88,1708,595,557,389,106,87,1733,604,646,435,112,79,1736,618,648,439,124,69,1657,590,611,498,194,50,514,566,506,404,145,45,317,335,314,176,75,68,1581,600,614,422,104,67,1656,601,603,367,112,67,1676,609,621,420,107,63,1728,597,590,431,123,71,1668,579,643,469,176,50,567,522,514,364,141,37,267,457,465,264,123,37,1272,934,576,470,149,44,991,816,601,356,151,36,1277,1015,574,494,170,37,1259,1010,618,531,180,39,1101,902,597,402,144,31,352,540,469,321,124,28,230,384,425,261,109,47,1175,961,529,309,159,47,1258,1030,580,471,174,46,1270,1022,572,507,184,43,1209,997,568,487,187,41,1194,993,573,457,199,38,381,564,473,324,158,39,214,414,425,258,108,39,1087,831,583,481,159,40,1201,966,544,527,160,47,1118,937,606,468,193,34,304,340,380,335,154,51,552,588,534,370,159,55,333,490,424,344,155,45,224,436,484,304,127,44,1210,937,513,494,134,37,1243,967,559,489,156,39,1260,972,555,523,183,27,1217,989,579,500,161,46,1200,928,596,547,179,61,297,561,420,330,147,34,218,387,383,217,121,34,1215,971,532,508,159,45,1256,940,581,514,152,35,1262,954,552,494,173,29,1229,1006,587,519,172,39,1151,937,557,501,188,35,371,524,432,297,134,25,227,430,408,271,113,34,1151,995,565,464,152,40,1187,958,541,476,175,35,1151,884,514,416,165,27,1118,945,543,494,153,34,1128,949,584,431,155,38,320,539,438,369,134,58,201,369,392,251,97,38,1129,920,581,455,170,36,1160,933,563,496,173,41,1113,966,570,506,170,31,1093,921,545,502,183,40,1069,870,634,461,213,37,301,476,495,373,163,36,209,401,423,333,144,33,145,218,327,233,100,38,649,652,497,357,135,37,698,665,472,369,130,34,704,663,418,340,154,26,670,654,547,391,134,36,268,427,433,307,130,37,186,343,342,294,140,47,166,228,277,217,96,34,921,738,519,429,123,33,1032,846,540,458,139,29,601,350,200,168,68,23,811,710,501,366,121,27,264,388,411,263,93,24,179,325,336,205,95,33,1062,814,474,437,136,37,1132,895,525,491,188,32,1131,878,562,478,152,40,1117,902,517,501,179,40,1092,801,527,425,174,32,310,464,408,283,117,33,189,338,362,230,99,30,563,529,403,338,123,34,1109,891,527,482,148,42,1062,815,494,461,132,28,1099,862,518,426,142,30,1098,847,606,477,180,31,315,533,496,376,164,42,186,388,395,263,107,41,960,897,576,459,150,32,979,824,604,536,151,37,945,871,634,519,130,37,982,806,609,488,155,29,910,843,600,507,166,42,342,541,480,355,150,46,202,344,375,262,109,35,981,872,615,467,156,35,1180,906,528,466,160,33,1145,898,563,439,171,36,1177,872,551,470,124,34,1104,873,568,496,169,32,307,550,481,329,169,31,192,376,408,188,115,36,1124,885,560,439,147,39,1175,910,533,506,157,40,1132,864,564,384,139,626,627,896,576,496,142,32,1134,887,617,518,172,38,331,536,491,316,155,28,197,328,329,200,95,44,1142,883,535,479,158,30,1182,918,548,470,175,38,1173,911,565,459,157,43,1163,940,555,492,144,33,857,766,535,453,192,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,33,859,793,493,386,148,36,871,846,507,424,166,39,842,773,506,375,137,33,813,725,545,422,170,33,0,0,0,0,0,0,0,0,0,0,19,34,1183,859,516,464,136,36,1161,896,595,465,162,27,1208,922,586,461,174,34,1154,920,561,478,154,40,1028,750,473,341,128,20,0,0,0,0,0,0,0,0,0,0,14,33,1183,942,511,445,133,33,1224,904,554,446,141,36,907,758,411,224,75,30,1151,855,539,465,138,29,1120,882,613,468,146,43,344,459,351,277,121,35,250,283,438,246,80,68,1546,571,587,343,96,66,1454,481,529,369,92,64,1544,585,573,369,101,71,1559,575,577,404,95,71,1500,530,585,399,132,35,437,456,453,272,136,33,272,345,361,244,71,69,1572,556,534,351,85,68,1571,578,551,348,90,63,836,295,258,183,55,76,1357,550,579,420,101,66,1482,506,640,480,140,24,0,0,0,0,0,0,0,0,3,0,29,69,1578,525,552,377,86,73,1555,556,594,429,114,57,1604,585,595,353,119,77,1489,585,578,367,122,62,855,589,502,302,120,49,396,471,424,272,139,33,238,378,392,202,75,76,920,521,480,343,80,76,1091,548,482,273,120,78,1042,617,501,388,107,71,1124,566,512,333,115,58,1025,538,509,381,134,42,387,394,331,247,74,32,235,299,283,203,77,68,1553,549,544,404,106,74,1522,584,554,385,106,66,1573,546,622,397,103,80,1581,598,588,415,122,90,1506,583,599,454,152,52,463,517,503,310,115,39,259,329,356,200,69,78,1395,445,555,347,124,71,1620,561,567,371,124,72,1529,625,607,382,110,72,1530,540,564,406,101,71,1475,577,652,432,131,50,453,427,395,272,87,28,271,362,360,239,65,72,1567,498,585,396,106,75,1572,563,602,396,99,71,1459,542,552,389,99,67,1580,565,625,425,108,70,1488,517,544,409,126,56,485,441,340,340,120,37,268,377,402,197,70,60,1534,566,520,378,129,76,1610,567,600,452,125,69,1608,590,597,427,105,86,1627,555,613,458,99,80,1541,571,608,458,161,60,501,503,461,371,112,54,283,403,421,233,92,77,1590,600,548,393,103,850,850,555,604,400,119,78,1578,587,605,398,127,86,1574,619,568,394,112,74,1535,604,606,493,143,44,459,468,412,299,118,37,254,393,354,246,80,63,1524,560,547,390,112,81,1606,560,605,338,83,76,1575,605,550,356,110,70,1462,555,590,394,131,85,1478,556,583,486,159,50,429,528,322,271,101,34,265,404,442,240,81,71,1462,536,610,366,113,75,1570,555,562,351,101,79,1552,600,598,390,115,84,1529,586,575,403,117,84,1462,554,636,491,163,47,450,469,467,311,159,49,230,320,333,232,86,51,445,388,466,286,111,71,1549,498,567,407,119,70,1518,545,588,400,108,84,1560,514,584,398,97,83,1435,574,617,496,163,52,474,500,441,347,122,38,282,411,387,222,91,68,1497,565,598,402,113,71,1454,569,555,426,115,79,1541,567,635,373,116,83,1241,581,590,403,113,74,1501,571,609,453,147,60,512,517,416,328,149,56,284,403,398,245,133,87,1385,570,547,423,137,72,1435,590,601,382,132,79,1355,599,585,379,114,80,1395,591,596,400,143,82,1150,591,526,459,153,49,450,506,460,330,155,55,267,393,383,261,130,86,1262,598,572,352,109,71,1390,555,598,324,126,74,1281,586,592,361,121,85,1265,560,554,415,148,88,1229,569,591,440]

selectedStations = [av20N, broadwayG, beach67A, clevelandSt]
dataName = "av20N"
mtaData = av20N

# Settings and constants
initialAngle = -pi/2   #  0=West, π/2=South, -π/2=North, π=East
thickness = 0.8
radius = 0.6
pointsPerRevolution = 6*7
heightDeltaPerPoint = 0.1 / pointsPerRevolution
maxByte = 0xFF
interpolateThreshold = 14    # Interpolate up to this many missing days
missingValue = -999
constantColorValue = 1.0
#palette = [0x2c7bb6, 0xabd9e9, 0xffffbf, 0xfdae61, 0xd7191c]
# http://colorbrewer2.org/?type=diverging&scheme=RdYlBu&n=9
#palette = [0x4575b4,
#           0x74add1,
#           0xabd9e9,
#           0xe0f3f8,
#           0xffffbf,
#           0xfee090,
#           0xfdae61,
#           0xf46d43,
#           0xd73027]
#palette = [0xd01c8b, 0xf1b6da, 0xf7f7f7, 0xb8e186, 0x4dac26]

palette = [
  0x01665e,
  0x35978f,
  0x80cdc1,
  0xc7eae5,
  0xf5f5f5,
  0xf6e8c3,
  0xdfc27d,
  0xbf812d,
  0x8c510a]

def dataFiles():
    """Generate suitable file paths from our dataDir.

    >>> fs = list(dataFiles())
    >>> len(fs) > 0
    True
    >>> fs[0].startswith(dataDir)
    True
    """
    for f in os.listdir(dataDir):
        if f.endswith(dataSuffix):
            yield os.path.join(dataDir, f)

def parseTemp(line):
    """Extract the temperature from one line of data.

    >>> parseTemp("046719   1 1911  1  1   65")
    65
    >>> parseTemp("046719   9 1911  1  9 -999")
    -999
    """
    return int(line.split()[-1])

def isAbsent(t):
    """Report whether a temperature represents missing data.

    >>> isAbsent(missingValue)
    True
    >>> isAbsent(42)
    False
    """
    return t == missingValue

def isPresent(t):
    """Report whether a temperature represents valid data.

    >>> isPresent(missingValue)
    False
    >>> isPresent(42)
    True
    """
    return not isAbsent(t)

def allTempsFrom(filePath):
    """Generate all temperatures from given file, including -999s.

    >>> ts = list(allTempsFrom(dataFile))
    >>> len(ts)
    36500
    >>> missingValue in ts
    True
    """
    with open(filePath) as instream:
        for line in instream:
            yield parseTemp(line)

def dailyAverages(temps):
    sums = [0] * pointsPerRevolution
    counts = [0] * pointsPerRevolution
    for i in range(len(temps)):
        if isPresent(temps[i]):
            d = i % pointsPerRevolution
            sums[d] += temps[i]
            counts[d] += 1
    # MAYBE guard against division by zero
    return [(sums[i]/counts[i]) for i in range(pointsPerRevolution)]

def dailyRanges(temps):
    mins = [999] * pointsPerRevolution
    maxes = [-999] * pointsPerRevolution
    for i in range(len(temps)):
        if isPresent(temps[i]):
            d = i % pointsPerRevolution
            if temps[i] > maxes[d]: maxes[d] = temps[i]
            if temps[i] < mins[d]: mins[d] = temps[i]
    return (mins, maxes)



def normalizeTemps(low, high, temps):
    """Generate a list scaled to the range {0..1}.

    >>> list(normalizeTemps(3, 5, [3, 4, 5, 4]))
    [0.0, 0.5, 1.0, 0.5]

    >>> list(normalizeTemps(3, 7, [3, 4, 5, missingValue, 6]))
    [0.0, 0.25, 0.5, -999, 0.75]
    """
    span = high - low
    for t in temps:
        yield (t - low) / span if isPresent(t) else t

def normalizeDailyTemps(mins, maxes, temps):
    for i in range(len(temps)):
        d = i % pointsPerRevolution
        t = temps[i]
        span = maxes[d] - mins[d]
        yield (t - mins[d]) / span if isPresent(t) else t

def vertexForTemp(t, i):
    """Report the x,y,z coordinate for given temperature and day."""
    year = floor(i/pointsPerRevolution)
    day = i % pointsPerRevolution
    theta = initialAngle - (day * 2 * pi / pointsPerRevolution)
    r = t * thickness + radius
    x = r * cos(theta)
    y = r * sin(theta)
    z = i * heightDeltaPerPoint
    return (x, y, z)

def equalIntervals(values):
    """Answer a list that pairs each value with a threshold.

    >>> list(equalIntervals([3,8,10,24]))
    [(0.25, 3), (0.5, 8), (0.75, 10), (1.0, 24)]
    """
    threshold = delta = 1.0 / len(values)
    for v in values:
        yield (threshold, v)
        threshold += delta

def colorForNormalizedTemp(colors, t):
    """Report the color, as a single integer, for given temperature.
Uses the `palette` setting defined above.

    >>> cs = list(equalIntervals([0x123456, 0x789abc, 0xdef012]))
    >>> '%06x' % colorForNormalizedTemp(cs, 0.25)
    '123456'
    """
    for threshold, color in colors:
        if t <= threshold:
            return color

def expandRGB(color):
    """Expand a single-integer color into a list in range 0..1.

    >>> expandRGB(0xff428a)
    [1.0, 0.25882352941176473, 0.5411764705882353]
    """
    r = (color >> 16) & maxByte
    g = (color >>  8) & maxByte
    b = (color >>  0) & maxByte
    return [r/maxByte, g/maxByte, b/maxByte]

def showPaletteHSV():
    import colorsys
    for c in palette:
        r, g, b = expandRGB(c)
        print('#%06x' % c, colorsys.rgb_to_hsv(r, g, b))

def showPaletteHTML(palette):
    for c in palette:
        print("""<div style="float:left; border:1px solid black;
margin: 2px; width:80px; height:80px; background:#%06x"></div>"""
              % c)

def normalizeColorValues(palette, value):
    import colorsys
    for c in palette:
        r, g, b = expandRGB(c)
        h, s, v = colorsys.rgb_to_hsv(r, g, b)
        r, g, b = colorsys.hsv_to_rgb(h, s, value)
        yield ((int(r*maxByte) << 16) +
               (int(g*maxByte) <<  8) +
               (int(b*maxByte) <<  0))

def triangularize(temps):
    """Return a list of faces, where each faces is 3 vertex indices."""
    faces = []
    for today in range(pointsPerRevolution+1, len(temps)):
        yesterday = today - 1
        yesterYear = today - pointsPerRevolution - 1
        lastYear = today - pointsPerRevolution
        if isPresent(temps[today]) and isPresent(temps[yesterday]) and isPresent(temps[yesterYear]):
            faces.append((yesterYear, yesterday, today))
        if isPresent(temps[today]) and isPresent(temps[yesterYear]) and isPresent(temps[lastYear]):
            faces.append((lastYear, yesterYear, today))
    return faces

def saveToBlender(vertexPoints, vertexColors, faces):
    import bpy
    name = dataName
    me = bpy.data.meshes.new(name+'Mesh')    # create a new mesh
    ob = bpy.data.objects.new(name, me)      # create an object with that mesh
    ob.location = bpy.context.scene.cursor_location # position object at 3d-cursor
    bpy.context.scene.objects.link(ob)              # Link object to scene

    # Fill the mesh with verts, edges, faces
    me.from_pydata(vertexPoints,[],faces)
    me.update(calc_edges=True)    # Update mesh with new data

    # Attach the vertex colors
    color_map_collection = me.vertex_colors
    if len(color_map_collection) == 0:
        color_map_collection.new()
    color_map = color_map_collection['Col']
    for i in range(len(me.polygons)):
        poly = me.polygons[i]
        vs = faces[i]
        for j in range(3):
            color_map.data[i*3+j].color = vertexColors[vs[j]]

def comparePalettes():
    showPaletteHTML(palette)
    print("<p>Variable</p>")
    v = 1.0
    while v >= 0.9:
        print("""<div style="clear:both"></div>""")
        showPaletteHTML(list(normalizeColorValues(palette, v)))
        print("<p>%f</p>" % v)
        v -= 0.02

def main():
    temps = mtaData
    print("Got %d samples" % len(temps))

    lowest = min([min(st) for st in selectedStations])
    highest = max([max(st) for st in selectedStations])
    print("Range is %d to %d" % (lowest, highest))

    temps = list(normalizeTemps(lowest, highest, temps))

    normalPalette = list(normalizeColorValues(palette, constantColorValue))
    colors = list(equalIntervals(normalPalette))

    vertexColors = [expandRGB(colorForNormalizedTemp(colors, t)) for t in temps]
    vertexPoints = []
    for i in range(len(temps)):
        vertexPoints.append(vertexForTemp(temps[i], i))
    print("Calculated %d vertices" % len(vertexPoints))

    faces = triangularize(temps)
    print("Specified %d triangles" % len(faces))

    try:
        import bpy
    except:
        print("Not running in blender, so we'll just dump the data.")
        print(colors)
        for v in vertexPoints:
            print(v)
        for c in vertexColors:
            print(c)
        for f in faces:
            print(f)
        exit(0)

    saveToBlender(vertexPoints, vertexColors, faces)

if __name__ == "__main__":
    #showPaletteHSV()
    main()
    #comparePalettes()
